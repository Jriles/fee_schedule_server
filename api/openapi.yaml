openapi: 3.0.0
info:
  description: API for the Corp Fees central.
  title: CorpFees
  version: 1.0.0
servers:
- url: http://localhost:8080/
paths:
  /services:
    get:
      description: Get a list of all supported services
      operationId: getAllServices
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/paths/~1services/post/responses/201/content/application~1json/schema'
                type: array
          description: OK
      security:
      - sessionCookieAuth: []
    post:
      operationId: createService
      requestBody:
        $ref: '#/components/requestBodies/CreateServiceSchema'
        content:
          application/json:
            schema:
              example:
                title: title
              properties:
                title:
                  type: string
              required:
              - title
              title: CreateServiceSchema
              type: object
        description: This creates a service like Ammended and Restated articles, or
          Formation.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: Created
      security:
      - sessionCookieAuth: []
  /services/{serviceId}/:
    delete:
      description: Delete a service.
      operationId: deleteService
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          title: ServiceId
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
      security:
      - sessionCookieAuth: []
    get:
      description: Get one service's details
      operationId: getService
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          title: ServiceId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1services/post/responses/201/content/application~1json/schema'
          description: OK
      security:
      - sessionCookieAuth: []
    patch:
      description: Update Service values
      operationId: updateService
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          title: ServiceId
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateServiceSchema'
        content:
          application/json:
            schema:
              example:
                title: title
              properties:
                title:
                  type: string
              title: UpdateServiceSchema
              type: object
        required: true
      responses:
        "204":
          description: Updated
      security:
      - sessionCookieAuth: []
  /attributes:
    get:
      description: Get all database wide attributes like stock count, jurisdiction
        and entity type.
      operationId: getAllAttributes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/paths/~1attributes~1%7BattributeId%7D/get/responses/200/content/application~1json/schema'
                type: array
          description: OK
      security:
      - sessionCookieAuth: []
    post:
      description: Create a database-wide attribute. Think stock count or entity type
      operationId: createAttribute
      requestBody:
        $ref: '#/components/requestBodies/CreateAttributeSchema'
        content:
          application/json:
            schema:
              example:
                title: title
              properties:
                title:
                  type: string
              required:
              - title
              title: CreateAttributeSchema
              type: object
        required: true
      responses:
        "201":
          description: Created
      security:
      - sessionCookieAuth: []
  /attributes/{attributeId}:
    delete:
      description: Delete an attribute.
      operationId: deleteAttribute
      parameters:
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          title: AttributeId
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
      security:
      - sessionCookieAuth: []
    get:
      description: Get an attribute from its id.
      operationId: getAttribute
      parameters:
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          title: AttributeId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeResponse'
          description: OK
      security:
      - sessionCookieAuth: []
    patch:
      description: Update an attribute's name or other details. But not the attribute
        values.
      operationId: updateAttribute
      parameters:
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          title: AttributeId
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateAttributeSchema'
        content:
          application/json:
            schema:
              example:
                title: title
              properties:
                title:
                  type: string
              title: UpdateAttributeSchema
              type: object
        required: true
      responses:
        "204":
          description: Updated
      security:
      - sessionCookieAuth: []
  /attributes/{attributeId}/values:
    description: create a new value and get all values assoc. w an attribute
    get:
      description: Get all a given attribute's possible values
      operationId: getAllAttributeValues
      parameters:
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          title: AttributeId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttributeValueResponse'
                type: array
          description: OK
      security:
      - sessionCookieAuth: []
    post:
      description: Create a database-wide attribute value. Think 1000+ for stock count
        or Delware for jurisdiction.
      operationId: createAttributeValue
      parameters:
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          title: AttributeId
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateAttributeValueSchema'
        content:
          application/json:
            schema:
              example:
                title: title
              properties:
                title:
                  type: string
              required:
              - attributeId
              title: CreateAttributeValueSchema
              type: object
        required: true
      responses:
        "201":
          description: Created
      security:
      - sessionCookieAuth: []
  /attribute_values/{valueId}:
    delete:
      description: Delete an attribute value.
      operationId: deleteAttributeValue
      parameters:
      - explode: false
        in: path
        name: valueId
        required: true
        schema:
          title: ValueId
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
      security:
      - sessionCookieAuth: []
    description: update and delete specific attribute values here
    patch:
      description: Update an attribute value.
      operationId: updateAttributeValue
      parameters:
      - explode: false
        in: path
        name: valueId
        required: true
        schema:
          title: ValueId
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateAttributeValueSchema'
        content:
          application/json:
            schema:
              example:
                title: title
              properties:
                title:
                  type: string
              title: UpdateAttributeValueSchema
              type: object
        required: true
      responses:
        "204":
          description: Updated
      security:
      - sessionCookieAuth: []
  /services/{serviceId}/attributes/{attributeId}/lines:
    post:
      operationId: createServiceAttributeLine
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          title: ServiceId
          type: string
        style: simple
      - explode: false
        in: path
        name: attributeId
        required: true
        schema:
          title: AttributeId
          type: string
        style: simple
      responses:
        "201":
          description: Created
      security:
      - sessionCookieAuth: []
      summary: Create an attribute line for a service. This is how we relate attribute
        values to services.
  /services/{serviceId}/attribute_lines:
    get:
      operationId: getServiceAttributeLines
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          title: ServiceId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/paths/~1service_attribute_lines~1%7BlineId%7D/get/responses/200/content/application~1json/schema'
                type: array
          description: Success
      security:
      - sessionCookieAuth: []
      summary: Given a service id, return the all service attribute lines.
  /service_attribute_lines/{lineId}:
    delete:
      operationId: deleteServiceAttributeLine
      parameters:
      - explode: false
        in: path
        name: lineId
        required: true
        schema:
          title: LineId
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
      security:
      - sessionCookieAuth: []
      summary: Delete a service attribute line.
    get:
      operationId: getServiceAttributeLine
      parameters:
      - explode: false
        in: path
        name: lineId
        required: true
        schema:
          title: LineId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAttributeLineResponse'
          description: Success
      security:
      - sessionCookieAuth: []
      summary: Given a service id and an attribute id, return the service attribute
        line for that combination
  /service_attribute_lines/{lineId}/values:
    description: This endpoint supports CRD on the allowed values for a service. Think
      1 day or 2 day or 3 day for filing speed attribute on Ammended and Restated
      articles.
    get:
      operationId: getServiceAttrVals
      parameters:
      - explode: false
        in: path
        name: lineId
        required: true
        schema:
          title: LineId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/paths/~1service_attribute_lines~1%7BlineId%7D/get/responses/200/content/application~1json/schema/properties/service_attribute_values/items'
                type: array
          description: Created
      security:
      - sessionCookieAuth: []
      summary: Get all the service attribute values for a particular service attribute
        line.
    post:
      operationId: createServiceAttributeValue
      parameters:
      - explode: false
        in: path
        name: lineId
        required: true
        schema:
          title: LineId
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateServiceAttributeValueSchema'
        content:
          application/json:
            schema:
              example:
                attributeValueId: attributeValueId
              properties:
                attributeValueId:
                  type: string
              required:
              - attributeValueId
              title: CreateServiceAttributeValueSchema
              type: object
        required: true
      responses:
        "201":
          description: Created
      security:
      - sessionCookieAuth: []
      summary: create a new service attribute value (not an attribute value.) This
        only applies to the service listed in the path.
  /service_attribute_values/{valueId}:
    delete:
      operationId: deleteServiceAttributeValue
      parameters:
      - explode: false
        in: path
        name: valueId
        required: true
        schema:
          title: ValueId
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
      security:
      - sessionCookieAuth: []
      summary: Delete a service attribute value. valueId here is the service attribute
        value id NOT the attribute value id.
  /service_variants/:
    get:
      operationId: getVariants
      parameters:
      - description: This param is an array of strings where the strings are the service
          attribute value ids.
        explode: true
        in: query
        name: serviceAttributeValueIds[]
        required: false
        schema:
          items:
            type: string
          title: ServiceAttributeValueIds
          type: array
        style: form
      - description: Page number of the total variant count available. The number
          of variants per page currently is 50. Omitting this value is the same as
          asking for the first page of variants.
        explode: true
        in: query
        name: page_number
        required: false
        schema:
          type: integer
        style: form
      - description: This param represents the number of pages present in the current
          filing order. Some filings include a per page fee at the state level.
        explode: true
        in: query
        name: filing_page_count
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariantResponse'
          description: OK
      security:
      - sessionCookieAuth: []
      summary: Retrieve the variant (fee and other information) for a particular service
        variant, ie. (Amended and Restated Articles in Delaware, 1 Day). If you provide
        no values for the serviceAttribute Values then you will recieve a list of
        all service variants.
    post:
      operationId: createVariant
      requestBody:
        $ref: '#/components/requestBodies/CreateServiceVariantSchema'
        content:
          application/json:
            schema:
              example:
                per_page_state_cost: 6
                service_id: service_id
                state_cost: 0
                service_attribute_value_ids:
                - service_attribute_value_ids
                - service_attribute_value_ids
              properties:
                service_id:
                  type: string
                state_cost:
                  type: integer
                per_page_state_cost:
                  type: integer
                service_attribute_value_ids:
                  items:
                    type: string
                  type: array
              required:
              - service_attribute_value_ids
              - service_id
              - state_cost
              title: CreateServiceVariantSchema
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VariantCreatedResponse'
                type: array
          description: Created
      security:
      - sessionCookieAuth: []
      summary: Create a variant for a service with a specific combination of Jurisdiction,
        Filing Speed and Entity type.
  /service_variants/{variantId}:
    delete:
      operationId: deleteVariant
      parameters:
      - explode: false
        in: path
        name: variantId
        required: true
        schema:
          title: VariantId
          type: string
        style: simple
      responses:
        "204":
          description: Deleted
      security:
      - sessionCookieAuth: []
      summary: Delete a service variant.
  /services/{serviceId}/variants/:
    get:
      operationId: getServiceVariants
      parameters:
      - explode: false
        in: path
        name: serviceId
        required: true
        schema:
          title: ServiceId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/paths/~1service_variants~1/get/responses/200/content/application~1json/schema'
          description: OK
      security:
      - sessionCookieAuth: []
      summary: Get all variants for a particular service.
  /login:
    post:
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/LoginSchema'
        content:
          application/json:
            schema:
              example:
                password: password
                remember_me: true
                username: username
              properties:
                username:
                  type: string
                password:
                  type: string
                remember_me:
                  type: boolean
              required:
              - password
              - remember_me
              - username
              title: LoginSchema
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulLoginResponse'
          description: OK
      summary: Login a user using username and password.
components:
  requestBodies:
    UpdateAttributeValueSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAttributeValueSchema'
      required: true
    CreateAttributeSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAttributeSchema'
      required: true
    UpdateAttributeSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAttributeSchema'
      required: true
    CreateServiceSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateServiceSchema'
      required: true
    CreateServiceAttributeValueSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateServiceAttributeValueSchema'
      required: true
    CreateAttributeValueSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAttributeValueSchema'
      required: true
    UpdateServiceSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateServiceSchema'
      required: true
    LoginSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginSchema'
      required: true
    CreateServiceVariantSchema:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateServiceVariantSchema'
      required: true
  schemas:
    ServiceAttributeLineResponse:
      example:
        attribute_id: attribute_id
        attribute_title: attribute_title
        id: id
        service_attribute_values:
        - value_title: value_title
          id: id
        - value_title: value_title
          id: id
      properties:
        id:
          type: string
        attribute_title:
          type: string
        service_attribute_values:
          items:
            $ref: '#/components/schemas/service_attribute_value'
          type: array
        attribute_id:
          type: string
      required:
      - id
      - service_attribute_values
      title: ServiceAttributeLineResponse
      type: object
    UpdateAttributeValueSchema:
      example:
        title: title
      properties:
        title:
          type: string
      title: UpdateAttributeValueSchema
      type: object
    CreateAttributeSchema:
      example:
        title: title
      properties:
        title:
          type: string
      required:
      - title
      title: CreateAttributeSchema
      type: object
    UpdateAttributeSchema:
      example:
        title: title
      properties:
        title:
          type: string
      title: UpdateAttributeSchema
      type: object
    CreateServiceAttributeValueSchema:
      example:
        attributeValueId: attributeValueId
      properties:
        attributeValueId:
          type: string
      required:
      - attributeValueId
      title: CreateServiceAttributeValueSchema
      type: object
    CreateAttributeValueSchema:
      example:
        title: title
      properties:
        title:
          type: string
      required:
      - attributeId
      title: CreateAttributeValueSchema
      type: object
    AttributeValueResponse:
      example:
        attributeId: attributeId
        id: id
        title: title
      properties:
        title:
          type: string
        id:
          type: string
        attributeId:
          type: string
      required:
      - attributeValueId
      - id
      - title
      title: AttributeValueResponse
      type: object
    service_attribute_value:
      example:
        value_title: value_title
        id: id
      properties:
        id:
          type: string
        value_title:
          type: string
      required:
      - id
      - value_title
      title: service_attribute_value
      type: object
    VariantCreatedResponse:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      title: VariantCreatedResponse
      type: object
    SuccessfulLoginResponse:
      example:
        session_token: session_token
        user_id: user_id
      properties:
        session_token:
          type: string
        user_id:
          type: string
      required:
      - session_token
      - user_id
      title: SuccessfulLoginResponse
      type: object
    ServiceResponse:
      example:
        id: id
        title: title
      properties:
        id:
          type: string
        title:
          type: string
      required:
      - id
      - title
      title: ServiceResponse
      type: object
    CreateServiceSchema:
      example:
        title: title
      properties:
        title:
          type: string
      required:
      - title
      title: CreateServiceSchema
      type: object
    VariantResponse:
      example:
        service_attribute_vals:
        - service_attribute_vals
        - service_attribute_vals
        per_page_state_cost: 6
        service_name: service_name
        service_id: service_id
        id: id
        state_cost: 0
      properties:
        id:
          type: string
        state_cost:
          type: integer
        service_id:
          type: string
        service_attribute_vals:
          items:
            type: string
          type: array
        service_name:
          type: string
        per_page_state_cost:
          type: integer
      required:
      - id
      - service_id
      - state_cost
      title: VariantResponse
      type: object
    AttributeResponse:
      example:
        id: id
        title: title
      properties:
        id:
          type: string
        title:
          type: string
      required:
      - id
      - title
      title: AttributeResponse
      type: object
    UpdateServiceSchema:
      example:
        title: title
      properties:
        title:
          type: string
      title: UpdateServiceSchema
      type: object
    LoginSchema:
      example:
        password: password
        remember_me: true
        username: username
      properties:
        username:
          type: string
        password:
          type: string
        remember_me:
          type: boolean
      required:
      - password
      - remember_me
      - username
      title: LoginSchema
      type: object
    CreateServiceVariantSchema:
      example:
        per_page_state_cost: 6
        service_id: service_id
        state_cost: 0
        service_attribute_value_ids:
        - service_attribute_value_ids
        - service_attribute_value_ids
      properties:
        service_id:
          type: string
        state_cost:
          type: integer
        per_page_state_cost:
          type: integer
        service_attribute_value_ids:
          items:
            type: string
          type: array
      required:
      - service_attribute_value_ids
      - service_id
      - state_cost
      title: CreateServiceVariantSchema
      type: object
  securitySchemes:
    sessionCookieAuth:
      in: cookie
      name: sessionToken
      type: apiKey
